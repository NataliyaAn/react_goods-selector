{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","activeGood","indexGood","indexOf","handleClick","good","props","setState","handleClickClear","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,MACdC,YAAY,GAHhB,EAMEC,UAAYL,EAAMM,QAAQ,OAN5B,EAQEC,YAAc,SAACC,GACb,EAAKH,UAAY,EAAKI,MAAMT,MAAMM,QAAQE,GAC1C,EAAKE,SAAS,CACZP,aAAcK,EACdJ,YAAY,KAZlB,EAgBEO,iBAAmB,WACjB,EAAKN,WAAa,EAClB,EAAKK,SAAS,CACZP,aAAc,GACdC,YAAY,KApBlB,4CAwBE,WAAU,IAAD,OAEP,EAAqCQ,KAAKV,MAAlCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAEtB,OACE,uBAAMS,UAAU,oBAAhB,WACmB,IAAfT,EAEE,qBAAIS,UAAU,sCAAd,cAEGV,EACA,IAHH,eAKE,wBACE,aAAW,SACX,UAAQ,cACRW,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,sBAKlB,oBAAIE,UAAU,QAAd,+BAKJ,uBAAOA,UAAU,QAAjB,SACE,gCACGD,KAAKH,MAAMT,MAAMgB,KAAI,SAAAR,GAAI,OACxB,qBACE,UAAQ,OACRK,UAAWI,IAAW,CACpB,+BACE,EAAKR,MAAMT,MAAMM,QAAQE,KAAU,EAAKH,YAJ9C,UAOE,6BACI,EAAKA,YAAc,EAAKI,MAAMT,MAAMM,QAAQE,GAE1C,wBACE,UAAQ,YACRM,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKR,YAAYC,IALrB,eAaA,wBACE,UAAQ,eACRM,KAAK,SACLD,UAAU,iBACVE,QAAS,WACP,EAAKJ,oBALT,iBAaN,oBACE,UAAQ,YAERE,UAAU,eAHZ,SAKGL,GAHIA,oBA7FvB,GAAyBU,IAAMC,WCxB/BC,IAASC,OACP,cAAC,EAAD,CAAKrB,MAAOA,IACZsB,SAASC,eAAe,W","file":"static/js/main.e34c8368.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n  activeGood: boolean;\n};\n\ntype Props = {\n  goods: string[];\n};\n\nexport class App extends React.Component< Props, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n    activeGood: true,\n  };\n\n  indexGood = goods.indexOf('Jam');\n\n  handleClick = (good: string) => {\n    this.indexGood = this.props.goods.indexOf(good);\n    this.setState({\n      selectedGood: good,\n      activeGood: true,\n    });\n  };\n\n  handleClickClear = () => {\n    this.indexGood = -1;\n    this.setState({\n      selectedGood: '',\n      activeGood: false,\n    });\n  };\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { selectedGood, activeGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {(activeGood === true)\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              `\n              {selectedGood}\n              {' '}\n              is selected`\n              <button\n                aria-label=\"button\"\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.handleClickClear}\n              />\n            </h1>\n          )\n          : (\n            <h1 className=\"title\">\n              No goods selected\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {this.props.goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light':\n                    this.props.goods.indexOf(good) === this.indexGood,\n                })}\n              >\n                <td>\n                  {(this.indexGood !== this.props.goods.indexOf(good))\n                    ? (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => {\n                          this.handleClick(good);\n                        }}\n                      >\n                        +\n                      </button>\n                    )\n\n                    : (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={() => {\n                          this.handleClickClear();\n                        }}\n                      >\n                        -\n                      </button>\n                    )}\n\n                </td>\n                <td\n                  data-cy=\"GoodTitle\"\n                  key={good}\n                  className=\"is-vcentered\"\n                >\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App, goods } from './App';\n\nReactDOM.render(\n  <App goods={goods} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}